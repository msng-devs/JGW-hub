\hubapi\post\:
  get:
    operationId: post_list
    description: |
      게시글 목록을 가져옵니다.
      ## Router Option
      | option | value |
      |:---:|:---:|
      | 인증필요 | x |
      | 권한필요 | x |
    parameters:
      - name: page
        required: false
        in: query
        description: 몇번째 페이지를 가져올지 지정합니다.
        schema:
          type: integer
          default: 1
      - name: page_size
        required: false
        in: query
        description: 한 페이지에 몇개의 데이터를 가져올지 지정합니다.
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
    tags:
    - post
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginatedPostGetList'
      '404':
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardError'
            example:
              detail: Invalid page.
  post:
    operationId: post_create
    description: |
      게시글을 작성합니다. 쓰기 요청한 유저의 권한이 작성하려는 게시판의 쓰기 레벨과 같거나 더 높아야 글 작성이 가능합니다.<br>
      admin은 게시판의 쓰기 권한과 상관 없이 글 작성이 가능합니다.
      ## Router Option
      | option | value |
      |:---:|:---:|
      | 인증필요 | o |
      | 권한필요 | 게시판의 권한 이상 |
    tags:
      - post
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostCreate'
      required: true
    responses:
      '201':
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGet'
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostError'
            example:
              detail: board with this category name already exists.
      '403':
        description: Forbidden
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostError'
            example:
              detail: Not allowed.
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostError'
            example:
              detail: User header not found.
\hubapi\post\{post_id_pk}\:
  get:
    operationId: board_retrieve
    description: |
      지정한 게시판의 데이터를 가져옵니다.
      ## Router Option
      | option | value |
      |:---:|:---:|
      | authorization | false |
      | Role | x |
      | add user info | false |
    parameters:
    - in: path
      name: board_id_pk
      schema:
        type: string
      required: true
      description: 가져올 게시판 데이터의 pk
    tags:
    - post
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Board'
        description: ''
      '404':
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardError'
            example:
              detail: Not found.
  patch:
    operationId: board_partial_update
    description: |
      지정한 게시판의 데이터를 수정합니다. Admin만 수정이 가능합니다.<br>
      변경 가능한 데이터: 게시판 이름, 게시판 읽기/쓰기 레벨 레벨
      ## Router Option
      | option | value |
      |:---:|:---:|
      | authorization | true |
      | Role | admin |
      | add user info | false |
    parameters:
      - in: path
        name: board_id_pk
        schema:
          type: string
        required: true
        description: 수정할 게시판 데이터의 pk
    tags:
      - post
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatchedBoard'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardCreate'
      '400':
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardError'
            example:
              detail: board with this board name already exists.
      '404':
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardError'
            example:
              detail: Not found.
  delete:
    operationId: board_destroy
    description: |
      지정한 게시판을 삭제합니다.
      ## Router Option
      | option | value |
      |:---:|:---:|
      | authorization | true |
      | Role | admin |
      | add user info | false |
    parameters:
      - in: path
        name: board_id_pk
        schema:
          type: string
        required: true
        description: 삭제할 게시판 데이터의 pk
    tags:
      - post
    responses:
      '204':
        description: No response body
      '404':
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardError'
            example:
              detail: Not found.